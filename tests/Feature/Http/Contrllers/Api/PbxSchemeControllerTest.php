<?php
/**
 * Created by PhpStorm.
 * User: S.Karavaev
 * Date: 20.09.2018
 * Time: 22:54
 */

namespace Tests\Feature\Http\Contrllers\Api;

use App\Http\Requests\AbstractApiRequest;
use App\Domain\Entity\PbxScheme\NodeType;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class PbxSchemeControllerTest extends TestCase
{
    use DatabaseTransactions;
    use WithFaker;

    public function setUp()
    {
        parent::setUp();
    }

    public function testCreatePbxScheme()
    {
        $nodeType1 = factory(NodeType::class)->state(NodeType::TYPE_ACTION)->create(
            [
                'name' => 'Playback',
            ]
        );
        $nodeType2 = factory(NodeType::class)->state(NodeType::TYPE_ACTION)->create(
            [
                'name' => 'Dial',
            ]
        );

        $response = $this->json(
            'POST',
            '/api/1.0/pbx-scheme',
            [
                'nodes'     => [
                    [
                        'tmp_id'       => 'd87jdo90s',
                        'node_type_id' => $nodeType1->id,
                        'data'         => [
                            'filename' => 'helloworld',
                        ],
                    ],
                    [
                        'tmp_id'       => 'd87j923hdk',
                        'node_type_id' => $nodeType2->id,
                        'data'         => [
                            'endpoint'      => '305',
                            'music_on_hold' => 'default',
                        ],
                    ],
                ],
                'relations' => [
                    [
                        'type'      => 'positive',
                        'from_node' => 'd87jdo90s',
                        'to_node'   => 'd87j923hdk',
                    ],
                ],
            ],
            [
                AbstractApiRequest::CUSTOM_HEADER_USER_ID => $this->faker->uuid,
            ]
        );
        dd($response->getContent());
        $response->assertOk();
        $response->assertJsonStructure(
            [
                'id',
            ]
        );
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
